{"version":3,"sources":["Visual.jsx","App.js","index.js"],"names":["Visual","props","toggleTheme","text","x","className","id","type","onChange","htmlFor","App","useState","mode","setMode","setText","setX","document","querySelector","style","backgroundColor","color","textShadow","ReactDOM","render","StrictMode","getElementById"],"mappings":"uKAEA,SAASA,EAAOC,GAAQ,IACZC,EAAyBD,EAAzBC,YAAaC,EAAYF,EAAZE,KAAMC,EAAMH,EAANG,EAE3B,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,OAAf,yBACA,uBAAOC,GAAG,YAAYC,KAAK,WAAWC,SAAUN,IAChD,uBAAOO,QAAQ,YAAf,4BAER,sBAAKJ,UAAU,YAAf,qBAAoCF,EAAMC,QCTlD,SAASM,IAAO,IAAD,EACWC,oBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAENR,EAFM,KAEAW,EAFA,OAGKH,mBAAS,IAHd,mBAGNP,EAHM,KAGHW,EAHG,KA6Bb,OACE,mCACE,cAACf,EAAD,CAAQE,YA1BQ,YAEN,IAATU,GACCI,SAASC,cAAc,WAAWC,MAAMC,gBAAkB,QAC1DH,SAASC,cAAc,cAAcC,MAAMC,gBAAkB,UAC7DH,SAASC,cAAc,cAAcC,MAAME,MAAQ,UACnDJ,SAASC,cAAc,cAAcC,MAAMG,WAAa,yCACxDL,SAASC,cAAc,SAASC,MAAME,MAAQ,UAC9CN,EAAQ,eACRC,EAAK,KACLF,GAAQ,KAERG,SAASC,cAAc,WAAWC,MAAMC,gBAAkB,QAC1DH,SAASC,cAAc,cAAcC,MAAMC,gBAAkB,QAC7DH,SAASC,cAAc,cAAcC,MAAMG,WAAa,OACxDL,SAASC,cAAc,cAAcC,MAAME,MAAQ,OACnDJ,SAASC,cAAc,SAASC,MAAME,MAAQ,OAC9CN,EAAQ,IACRC,EAAK,IACLF,GAAQ,KAOwBV,KAAMA,EAAMC,EAAGA,MC7BvDkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFM,SAASS,eAAe,U","file":"static/js/main.17f7c8ac.chunk.js","sourcesContent":["\r\n\r\nfunction Visual(props) {\r\n    const { toggleTheme, text, x } = props;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='header'>\r\n                <div className='name'>Chiil place</div>\r\n                <input id=\"checkbox1\" type=\"checkbox\" onChange={toggleTheme}/>\r\n                <label htmlFor=\"checkbox1\">Mode switch</label>\r\n            </div>\r\n        <div className='text-area'>Sit back{text}{x}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {Visual}","import { Visual } from \"./Visual\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState(false);\n  const [text, setText] = useState('');\n  const [x, setX] = useState('');\n    \n  const toggleTheme = () => {\n      \n    if(mode === false){\n        document.querySelector('.header').style.backgroundColor = 'black';\n        document.querySelector('.container').style.backgroundColor = '#08020d';\n        document.querySelector('.text-area').style.color = '#08020d';\n        document.querySelector('.text-area').style.textShadow = '#41c464 1px 1px 0, #41c464 -1px -1px 0';\n        document.querySelector('.name').style.color = '#41c464';\n        setText('...and rela');\n        setX('x');\n        setMode(true);\n      }else {\n        document.querySelector('.header').style.backgroundColor = 'white';\n        document.querySelector('.container').style.backgroundColor = 'white';\n        document.querySelector('.text-area').style.textShadow = 'none';\n        document.querySelector('.text-area').style.color = 'gray';\n        document.querySelector('.name').style.color = 'gray';\n        setText('')\n        setX('');\n        setMode(false);\n      }\n\n  }\n\n  return (\n    <>\n      <Visual toggleTheme={toggleTheme} text={text} x={x}/>\n    </>\n  );\n}\n\nexport {App};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}